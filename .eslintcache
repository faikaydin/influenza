[{"/Users/pson0007/Documents/Practices/ez-anz/src/reportWebVitals.js":"1","/Users/pson0007/Documents/Practices/ez-anz/src/App.js":"2","/Users/pson0007/Documents/Practices/ez-anz/src/components/TableauEmbed.js":"3","/Users/pson0007/Documents/Practices/ez-anz/src/index.js":"4","/Users/pson0007/Documents/Practices/ez-anz/src/components/Navigation.js":"5","/Users/pson0007/Documents/Practices/ez-anz/src/components/Modelling.js":"6","/Users/pson0007/Documents/Practices/ez-anz/src/components/jupView/JupView.js":"7"},{"size":362,"mtime":1606545336023,"results":"8","hashOfConfig":"9"},{"size":593,"mtime":1606628711215,"results":"10","hashOfConfig":"9"},{"size":9258,"mtime":1606626994968,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1606545336022,"results":"12","hashOfConfig":"9"},{"size":782,"mtime":1606554078416,"results":"13","hashOfConfig":"9"},{"size":444,"mtime":1606629023156,"results":"14","hashOfConfig":"9"},{"size":19108,"mtime":1606628062864,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"deoy6w",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"/Users/pson0007/Documents/Practices/ez-anz/src/reportWebVitals.js",[],"/Users/pson0007/Documents/Practices/ez-anz/src/App.js",[],"/Users/pson0007/Documents/Practices/ez-anz/src/components/TableauEmbed.js",["32","33","34"],"import React, { useRef, useEffect } from 'react'\nimport './tableauEmbed.scss'\nimport YoungImg from './../assets/Young.jpeg'\nimport IndigenousImg from './../assets/Indigenous.jpeg'\nconst { tableau } = window\n\nconst TableauEmbed = () => {\n  const options = {\n    device: 'desktop',\n  }\n  const ref = useRef(null)\n  const url =\n    'https://public.tableau.com/views/influenza_16064333146460/Datacollected?:language=en'\n\n  const initViz = () => {\n    new tableau.Viz(ref.current, url, options)\n  }\n\n  const refTimeSeries = useRef(null)\n\n  const urlTimeSeries =\n    'https://public.tableau.com/views/influenza_16064333146460/Sheet2?:language=en'\n  const initVizTimeSeries = () => {\n    new tableau.Viz(refTimeSeries.current, urlTimeSeries, options)\n  }\n\n  const refStateYear = useRef(null)\n\n  const urlStateYear =\n    'https://public.tableau.com/views/influenza_16064333146460/Sheet1?:language=en'\n  const initVizStateYear = () => {\n    new tableau.Viz(refStateYear.current, urlStateYear, options)\n  }\n  const refAgeYear = useRef(null)\n\n  const urlAgeYear =\n    'https://public.tableau.com/views/influenza_16064333146460/Sheet14?:language=en'\n  const initVizAgeYear = () => {\n    new tableau.Viz(refAgeYear.current, urlAgeYear, options)\n  }\n\n  const refFLuYear = useRef(null)\n\n  const urlFLuYear =\n    'https://public.tableau.com/views/influenza_16064333146460/Sheet11?:language=en'\n  const initVizFLuYear = () => {\n    new tableau.Viz(refFLuYear.current, urlFLuYear, options)\n  }\n  const refSexYear = useRef(null)\n\n  const urlSexYear = 'https://public.tableau.com/shared/MN9T3NFZR'\n  const initVizSexYear = () => {\n    new tableau.Viz(refSexYear.current, urlSexYear, options)\n  }\n\n  const refIndigenous = useRef(null)\n\n  const urlIndigenous = 'https://public.tableau.com/shared/XWQP79M8T'\n  const initVizIndigenous = () => {\n    new tableau.Viz(refIndigenous.current, urlIndigenous, options)\n  }\n\n  useEffect(() => {\n    initViz()\n    initVizTimeSeries()\n    initVizAgeYear()\n    initVizStateYear()\n    initVizFLuYear()\n    initVizSexYear()\n    initVizIndigenous()\n  }, [])\n  return (\n    <div className=\"insightsContainer\">\n      <h1>Influenza Case Study</h1>\n      <div className=\"sectionContainer\">\n        <p>\n          The goal of this report is to communicate the Influenza records of\n          Australia taken from the Australian Department of Health.\n        </p>\n      </div>\n      <h1>About the dataset</h1>\n      <div className=\"sectionContainer\">\n        <div className=\"vizContainer\">\n          <div ref={ref}></div>\n        </div>\n        <div className=\"descContainer\">\n          <h3>Overall</h3>\n          <ul>\n            <li>Data spans from 2008 to 2017</li>\n            <li>Recent years have produced more cases</li>\n            <li>Spike in 2009 (H1N1 outbreak)</li>\n            <li>Disproportionality with State, Age, Sex & Indigenous Status</li>\n            <li>Significate spike in 2009 due toH1N1</li>\n            <li>\n              Gaps in records\n              <table className=\"greyGridTable\">\n                <thead>\n                  <tr>\n                    <th>Year</th>\n                    <th>State</th>\n                    <th>Count of Missing Weeks</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td>2008</td>\n                    <td>NT</td>\n                    <td>12</td>\n                  </tr>\n                  <tr>\n                    <td>2008</td>\n                    <td>SA</td>\n                    <td>20</td>\n                  </tr>\n                  <tr>\n                    <td>2008</td>\n                    <td>Tas</td>\n                    <td>17</td>\n                  </tr>\n\n                  <tr>\n                    <td>2009</td>\n                    <td>NT</td>\n                    <td>9</td>\n                  </tr>\n                  <tr>\n                    <td>2009</td>\n                    <td>SA</td>\n                    <td>6</td>\n                  </tr>\n                  <tr>\n                    <td>2009</td>\n                    <td>Vic</td>\n                    <td>3</td>\n                  </tr>\n\n                  <tr>\n                    <td>2009</td>\n                    <td>Tas</td>\n                    <td>21</td>\n                  </tr>\n\n                  <tr>\n                    <td>2010</td>\n                    <td>NT</td>\n                    <td>15</td>\n                  </tr>\n                  <tr>\n                    <td>2010</td>\n                    <td>Tas</td>\n                    <td>17</td>\n                  </tr>\n                  <tr>\n                    <td>2011</td>\n                    <td>NT</td>\n                    <td>4</td>\n                  </tr>\n                  <tr>\n                    <td>2011</td>\n                    <td>Tas</td>\n                    <td>8</td>\n                  </tr>\n                  <tr>\n                    <td>2012</td>\n                    <td>NT</td>\n                    <td>5</td>\n                  </tr>\n                  <tr>\n                    <td>2012</td>\n                    <td>Tas</td>\n                    <td>7</td>\n                  </tr>\n                  <tr>\n                    <td>2013</td>\n                    <td>Tas</td>\n                    <td>13</td>\n                  </tr>\n                  <tr>\n                    <td>2015</td>\n                    <td>Tas</td>\n                    <td>4</td>\n                  </tr>\n                </tbody>\n              </table>\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"sectionContainer\">\n        <div className=\"vizContainer\">\n          <div ref={refTimeSeries}></div>\n        </div>\n        <div className=\"descContainer\">\n          <h3>Seasonality</h3>\n          <ul>\n            <li>Data shows seasonality</li>\n            <li>\n              Weekly inconsistency, monthly sampling shows stronger seasonality\n            </li>\n            <li>Positive national trend</li>\n          </ul>\n        </div>\n      </div>\n      <h1>The 5 Factors</h1>\n      <div className=\"factorContainer\">\n        <ul>\n          <li>State</li>\n          <li>Age</li>\n          <li>Sex</li> <li>Flu Type</li>\n          <li>indigenous status </li>\n        </ul>\n      </div>\n      <div className=\"sectionContainer\">\n        <div className=\"vizContainer\">\n          <div ref={refStateYear}></div>\n        </div>\n        <div className=\"descContainer\">\n          <h3>State & Year</h3>\n          <ul>\n            <li>QLD shows most cases between 2008 - 2013</li>\n            <li>NSW overtakes QLD in 2013 in case figures</li>\n            <li>NSW, QLD, VIC have the highest figures</li>\n\n            <li>VIC and SA gap widens in 2016 and 2017</li>\n            <li>NT & TAS have significantly fewer cases and no trend</li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"sectionContainer\">\n        <div className=\"vizContainer\">\n          <div ref={refAgeYear}></div>\n        </div>\n        <div className=\"descContainer\">\n          <h3>Age & Year</h3>\n          <ul>\n            <li>Ages below 10 tend to have more cases recorded overall</li>\n            <li>Group 85+ sees a significant rise in cases</li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"sectionContainer\">\n        <div className=\"vizContainer\">\n          <div ref={refFLuYear}></div>\n        </div>\n        <div className=\"descContainer\">\n          <h3>Flu & Year</h3>\n          <ul>\n            <li>A(unsubtyped) and B have a positive trend</li>\n            <li>2009 H1N1 outbreak is under control</li>\n            <li>\n              A(unsubtyped) and B are the reason for the recent year increasing\n              trend\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"sectionContainer\">\n        <div className=\"vizContainer\">\n          <div ref={refSexYear}></div>\n        </div>\n        <div className=\"descContainer\">\n          <h3>Sex & Year</h3>\n          <ul>\n            <li>Overall females tend to have more cases</li>\n            <li>{'Age group < 10 cases tend to be skewed to male'}</li>\n            <li>\n              {\n                \"    Simulating 1000 times with sample size of age group < 10 case counts, with the hypothesis: 'influenza infections in children have no bias w/ gender'\"\n              }\n\n              <p>\n                <img src={YoungImg} alt=\"Young Image\" />\n              </p>\n            </li>\n          </ul>\n        </div>\n      </div>\n\n      <div className=\"sectionContainer\">\n        <div className=\"vizContainer indigenous\">\n          <div ref={refIndigenous}></div>\n        </div>\n        <div className=\"descContainer\">\n          <h3>Indigenous Status</h3>\n          <ul>\n            <li>Looking only at NT and WA</li>\n            <li>\n              Seeing disproportionately large cases in Indigenous communities\n              (given population)\n            </li>\n            <li>\n              Vaccine coverage statistics\n              <p>\n                <img src={IndigenousImg} alt=\"Indigenous Image\" width=\"400px\" />\n              </p>\n              from <a href=\"/\">health.gov.au</a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default TableauEmbed\n","/Users/pson0007/Documents/Practices/ez-anz/src/index.js",[],"/Users/pson0007/Documents/Practices/ez-anz/src/components/Navigation.js",[],"/Users/pson0007/Documents/Practices/ez-anz/src/components/Modelling.js",[],"/Users/pson0007/Documents/Practices/ez-anz/src/components/jupView/JupView.js",["35","36","37","38","39","40","41","42","43","44","45","46","47","48","49"],"import React from 'react'\nimport { Card, Spin, Tag, Col, Row, Typography, Switch } from 'antd'\nimport { render } from 'react-dom'\nimport AceEditor from 'react-ace'\nimport 'ace-builds/src-noconflict/mode-python'\nimport 'ace-builds/src-noconflict/theme-monokai'\nimport 'ace-builds/src-noconflict/theme-kuroir'\nimport 'ace-builds/src-noconflict/theme-terminal'\n\nconst ReactMarkdown = require('react-markdown')\nconst { Meta } = Card\n\nclass JupViewer extends React.Component {\n  state = {\n    //file_path\n    fpath: '',\n    fbase_path: '',\n    // Editor Theme\n    ed_theme: 'darkTheme',\n    text_ed_theme: 'monokai',\n    //themes:\n    background_theme: 'black',\n    background_text_theme: 'white',\n    // background_input_theme: '#2F3129',\n    background_input_theme: '#272822',\n    background_output_theme: '#2F3129',\n    loading: true,\n    notebook_json: null,\n    placeholder_component: 'Loading....',\n\n    // Gutter\n    gutterVisible: false,\n  }\n\n  validURL(str) {\n    var pattern = new RegExp(\n      '^(https?:\\\\/\\\\/)?' + // protocol\n        '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n        '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n        '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n        '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n        '(\\\\#[-a-z\\\\d_]*)?$',\n      'i'\n    ) // fragment locator\n    return !!pattern.test(str)\n  }\n\n  async componentDidMount() {\n    if (!!this.props.file) {\n      var fbase = this.props.file.split('/')\n      fbase.pop()\n      this.setState({\n        fpath: this.props.file,\n        fbase_path: fbase.join('/') + '/',\n      })\n      await fetch(this.props.file)\n        .then((r) => r.text())\n        .then(async (text) => {\n          try {\n            var notebook_json = JSON.parse(text)\n            this.setState({\n              notebook_json: notebook_json,\n              loading: false,\n              placeholder_component: 'Notebook loaded',\n            })\n            console.log(this.state.notebook_json)\n          } catch (error) {\n            alert('OOps! Unable to load json')\n            this.setState({\n              notebook_json: { message: 'Unable to parse .ipynb file' },\n              loading: false,\n              placeholder_component:\n                'Oops! We have problem opening the notebook',\n            })\n          }\n        })\n    }\n  }\n\n  praseSource(source) {\n    var cell_content = ``\n    for (var code in source) {\n      cell_content += source[code]\n    }\n    return cell_content\n  }\n\n  parseMD(source) {\n    var cell_content = ``\n    for (var code in source) {\n      var rgx = new RegExp(/src=\"(.*?)\"/)\n      var new_source = source[code]\n      var old_source = source[code].match(rgx)\n      if (!!old_source && !this.validURL(old_source[1])) {\n        new_source = source[code].replace(\n          /src=\"(.*?)\"/,\n          'src=\"' + this.state.fbase_path + old_source[1] + '\"'\n        )\n        // console.log(new_source)\n      } else {\n        var rgx2 = new RegExp(/\\!\\[(.*?)\\]\\((.*?)[\\s|\\)]/)\n        var s2 = source[code].match(rgx2)\n        if (!!s2 && !this.validURL(s2[2])) {\n          // console.log(s2[2])\n          // console.log(this.validURL(s2[2]))\n          // console.log(new_source.replace(s2[2], this.state.fbase_path + s2[2]))\n          new_source = new_source.replace(s2[2], this.state.fbase_path + s2[2])\n        }\n      }\n      //\n      cell_content += new_source\n    }\n    return cell_content\n  }\n\n  praseOutputs(outputs) {\n    if (outputs.length == 0) {\n      return ''\n    }\n    // Handle \"data\" type cells\n    var text_plain = ``\n    var stdout = ``\n    var errors = ``\n    var img_data = `data:image/png;base64,`\n\n    //booleans\n    var stdout_found = false\n    var text_found = false\n    var error_found = false\n    var img_found = false\n\n    //maxlines for each output type\n    var lines_stdout = 3\n    var lines_text_plain = 3\n    var lines_error_trace = 3\n    for (var outs in outputs) {\n      if ('data' in outputs[outs]) {\n        if ('text/plain' in outputs[outs]['data']) {\n          for (var text in outputs[outs]['data']['text/plain']) {\n            text_plain += outputs[outs]['data']['text/plain'][text]\n          }\n          text_found = true\n          lines_text_plain = outputs[outs]['data']['text/plain'].length\n        }\n        if ('image/png' in outputs[outs]['data']) {\n          img_data += outputs[outs]['data']['image/png']\n          img_found = true\n        }\n      }\n      if ('name' in outputs[outs]) {\n        for (var text in outputs[outs]['text']) {\n          stdout += outputs[outs]['text'][text]\n        }\n        stdout_found = true\n        lines_stdout = outputs[outs]['text'].length\n      }\n      // Check for errors\n      if ('ename' in outputs[outs]) {\n        errors += outputs[outs]['ename'] + '\\n' + outputs[outs]['evalue'] + '\\n'\n        // for (var trace in outputs[outs][\"traceback\"]) {\n        //     errors += outputs[outs][\"traceback\"][trace]\n        // }\n        error_found = true\n        lines_error_trace = outputs[outs]['traceback'].length\n      }\n    }\n\n    var return_template = (\n      <div>\n        <div\n          style={{\n            padding: '5px 3px',\n            display: stdout_found ? '' : 'none',\n          }}\n        >\n          <Tag color=\"#2db7f5\">stdout</Tag>\n          <br></br>\n          <AceEditor\n            readOnly\n            placeholder=\"--\"\n            mode=\"markdown\"\n            theme={this.state.text_ed_theme}\n            name=\"stdout\"\n            style={{\n              maxWidth: '700px',\n              padding: '10px',\n              margin: '10px 0px',\n            }}\n            width=\"100%\"\n            maxLines={lines_stdout + 1}\n            fontSize={14}\n            showPrintMargin={false}\n            showGutter={false}\n            highlightActiveLine={false}\n            value={stdout}\n            setOptions={{\n              enableBasicAutocompletion: false,\n              enableLiveAutocompletion: false,\n              enableSnippets: false,\n              showLineNumbers: false,\n              tabSize: 2,\n            }}\n          />\n        </div>\n        <div style={{ padding: '5px 3px', display: text_found ? '' : 'none' }}>\n          <Tag color=\"#87d068\">data:text/plain</Tag>\n          <br></br>\n          <AceEditor\n            readOnly\n            placeholder=\"--\"\n            mode=\"markdown\"\n            theme={this.state.text_ed_theme}\n            name=\"text\"\n            style={{\n              maxWidth: '700px',\n              padding: '10px',\n              margin: '10px 0px',\n            }}\n            width=\"100%\"\n            maxLines={lines_text_plain}\n            fontSize={14}\n            showPrintMargin={false}\n            showGutter={false}\n            highlightActiveLine={false}\n            value={text_plain}\n            setOptions={{\n              enableBasicAutocompletion: false,\n              enableLiveAutocompletion: false,\n              enableSnippets: false,\n              showLineNumbers: false,\n              tabSize: 2,\n            }}\n          />\n        </div>\n        <div style={{ display: img_found ? '' : 'none' }}>\n          <Tag color=\"#87d068\">data:image/png</Tag>\n          <br></br>\n          <img\n            src={img_data}\n            style={{\n              display: img_found ? '' : 'none',\n              width: '100%',\n              backgroundColor: 'white',\n            }}\n          />\n        </div>\n        <div style={{ padding: '5px 3px', display: error_found ? '' : 'none' }}>\n          <Tag color=\"#f50\">error</Tag>\n          <br></br>\n          <AceEditor\n            readOnly\n            placeholder=\"--\"\n            mode=\"markdown\"\n            theme={this.state.text_ed_theme}\n            name=\"error\"\n            style={{\n              maxWidth: '700px',\n              padding: '10px',\n              margin: '10px 0px',\n            }}\n            width=\"100%\"\n            maxLines={lines_error_trace}\n            fontSize={14}\n            showPrintMargin={false}\n            showGutter={false}\n            highlightActiveLine={false}\n            value={errors}\n            setOptions={{\n              enableBasicAutocompletion: false,\n              enableLiveAutocompletion: false,\n              enableSnippets: false,\n              showLineNumbers: false,\n              tabSize: 2,\n            }}\n          />\n        </div>\n      </div>\n    )\n\n    return return_template\n  }\n\n  themeChanger(ev) {\n    if (ev) {\n      this.setState({\n        // Editor Theme\n        ed_theme: 'darkTheme',\n        text_ed_theme: 'monokai',\n        //themes:\n        background_theme: 'black',\n        background_text_theme: 'white',\n        // background_input_theme: '#2F3129',\n        background_input_theme: '#272822',\n        background_output_theme: '#2F3129',\n      })\n    } else {\n      this.setState({\n        // Editor Theme\n        ed_theme: 'lightTheme',\n        text_ed_theme: 'kuroir',\n        //themes:\n        background_theme: 'white',\n        background_text_theme: 'black',\n        // background_input_theme: '#2F3129',\n        background_input_theme: '#E8E9E8',\n        background_output_theme: '#F1F1F2',\n      })\n    }\n    console.log(`switch to ${ev}`)\n  }\n\n  gutterChanger(ev) {\n    if (ev) {\n      this.setState({\n        gutterVisible: true,\n      })\n    } else {\n      this.setState({\n        gutterVisible: false,\n      })\n    }\n  }\n\n  render() {\n    console.log(this.props.file)\n    return (\n      <div>\n        <br></br>\n        <Spin spinning={this.state.loading}>\n          <center>\n            {/* This is where the blog metadata and the cover will go */}\n            <div class={this.state.ed_theme}>\n              <Card\n                bodyStyle={{\n                  padding: '30px 10px',\n                  backgroundColor: this.state.background_output_theme,\n                }}\n                style={{\n                  width: '100%',\n                  maxWidth: '800px',\n                  border: 'none',\n                }}\n              >\n                <Row>\n                  <Col span={1}></Col>\n                  <Col span={22}>\n                    <Typography.Title\n                      strong\n                      style={{\n                        color: this.state.background_text_theme,\n                        // fontSize: '50px',\n                        wordWrap: 'break-word',\n                        width: '100%',\n                      }}\n                    >\n                      {this.props.title}\n                    </Typography.Title>\n                    <Typography.Title\n                      level={4}\n                      style={{\n                        color: this.state.background_text_theme,\n                        wordWrap: 'break-word',\n                        width: '100%',\n                        display: !!this.props.subtitle ? '' : 'none',\n                      }}\n                    >\n                      {this.props.subtitle}\n                    </Typography.Title>\n                  </Col>\n                  <Col span={1}></Col>\n                </Row>\n\n                <Row>\n                  <Col span={1}></Col>\n                  <Col span={22}>\n                    <img\n                      alt=\"No Cover Image Found\"\n                      style={{\n                        display: !!this.props.coverImg ? '' : 'none',\n                        width: '100%',\n                      }}\n                      src={\n                        !!this.props.coverImg\n                          ? this.props.coverImg\n                          : 'http://eskipaper.com/images/simple-silver-wallpaper-1.jpg'\n                      }\n                    />\n                  </Col>\n                  <Col span={1}></Col>\n                </Row>\n\n                <br></br>\n                <br></br>\n                <Row>\n                  <Col span={1}></Col>\n                  <Col span={20}>\n                    <Tag color=\"blue\" style={{ float: 'left' }}>\n                      {this.state.loading\n                        ? 'Unknown'\n                        : this.state.notebook_json['metadata']['kernelspec'][\n                            'display_name'\n                          ]}\n                    </Tag>\n                    <Switch\n                      style={{\n                        margin: '0px 5px',\n                      }}\n                      defaultChecked\n                      checkedChildren=\"dark theme\"\n                      unCheckedChildren=\"light theme\"\n                      onChange={this.themeChanger.bind(this)}\n                    />\n                    <Switch\n                      style={{\n                        margin: '0px 5px',\n                      }}\n                      checkedChildren=\"gutter visilbe\"\n                      unCheckedChildren=\"gutter hidden\"\n                      onChange={this.gutterChanger.bind(this)}\n                    />\n                  </Col>\n                  <Col span={1}></Col>\n                </Row>\n              </Card>\n            </div>\n            {this.state.loading ? (\n              <div></div>\n            ) : (\n              this.state.notebook_json['cells'].map((item) => (\n                <Card\n                  bodyStyle={{\n                    padding: '0px 10px',\n                    backgroundColor: this.state.background_output_theme,\n                  }}\n                  style={{\n                    width: '100%',\n                    maxWidth: '800px',\n                    border: 'none',\n                  }}\n                >\n                  <Row\n                    style={{\n                      backgroundColor: this.state.background_output_theme,\n                    }}\n                  >\n                    <Col span={this.state.gutterVisible ? 3 : 1}>\n                      <div\n                        style={{\n                          display: this.state.gutterVisible ? '' : 'none',\n                        }}\n                      >\n                        <Typography.Text\n                          style={{\n                            color: this.state.background_text_theme,\n                            float: 'left',\n                            padding: '5px',\n                            color: '#56ACBC',\n                            display: item['cell_type'] == 'code' ? '' : 'none',\n                          }}\n                        >\n                          I [ {item['execution_count']} ]:\n                        </Typography.Text>\n                      </div>\n                    </Col>\n\n                    <Col\n                      span={this.state.gutterVisible ? 20 : 22}\n                      style={{\n                        textAlign: 'left',\n                      }}\n                    >\n                      {item['cell_type'] == 'code' ? (\n                        <div\n                          style={{\n                            padding: '5px 0px',\n                            borderStyle: 'solid',\n                            borderWidth: '1px',\n                            backgroundColor: this.state.background_input_theme,\n                          }}\n                        >\n                          <AceEditor\n                            readOnly\n                            placeholder=\"---\"\n                            mode=\"python\"\n                            theme={this.state.text_ed_theme}\n                            name=\"code\"\n                            style={{\n                              maxWidth: '700px',\n                              padding: '10px',\n                              margin: '10px 0px',\n                            }}\n                            width=\"100%\"\n                            maxLines={\n                              item['source'].length == 0\n                                ? 1\n                                : item['source'].length + 1\n                            }\n                            onLoad={this.onLoad}\n                            onChange={this.onChange}\n                            fontSize={14}\n                            showGutter={true}\n                            highlightActiveLine={true}\n                            value={this.praseSource(item['source'])}\n                            setOptions={{\n                              enableBasicAutocompletion: false,\n                              enableLiveAutocompletion: false,\n                              enableSnippets: false,\n                              showLineNumbers: true,\n                              tabSize: 2,\n                            }}\n                          />\n                        </div>\n                      ) : (\n                        <div class=\"MDImg\">\n                          <div\n                            class={this.state.ed_theme}\n                            style={{\n                              margin: '0px 0px',\n                              padding: '10px',\n                              // border:'solid',\n                              // borderWidth:'1px'\n                            }}\n                          >\n                            <ReactMarkdown\n                              style={{\n                                float: 'left',\n                              }}\n                              source={this.parseMD(item['source'])}\n                              escapeHtml={false}\n                            />\n                          </div>\n                        </div>\n                      )}\n                    </Col>\n                    <Col span={1}></Col>\n                  </Row>\n\n                  {item['cell_type'] == 'markdown' ? (\n                    <div></div>\n                  ) : (\n                    <Row\n                      style={{\n                        display:\n                          !!item['outputs'].length == 0 ? 'none' : 'visible',\n                        backgroundColor: this.state.background_output_theme,\n                      }}\n                    >\n                      <Col span={this.state.gutterVisible ? 3 : 1}>\n                        <Typography.Text\n                          style={{\n                            display: this.state.gutterVisible ? '' : 'none',\n                            color: this.state.background_text_theme,\n                            float: 'left',\n                            padding: '5px',\n                            color: '#E5496A',\n                          }}\n                        >\n                          O [ {item['execution_count']} ]:\n                        </Typography.Text>\n                      </Col>\n                      <Col\n                        span={this.state.gutterVisible ? 20 : 22}\n                        style={{\n                          textAlign: 'left',\n                          color: 'white',\n                        }}\n                      >\n                        {this.praseOutputs(item['outputs'])}\n                      </Col>\n                      <Col span={1}></Col>\n                    </Row>\n                  )}\n                </Card>\n              ))\n            )}\n          </center>\n        </Spin>\n        <br></br>\n      </div>\n    )\n  }\n}\n\nexport default JupViewer\n",{"ruleId":"50","severity":1,"message":"51","line":71,"column":6,"nodeType":"52","endLine":71,"endColumn":8,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":272,"column":17,"nodeType":"56","endLine":272,"endColumn":57},{"ruleId":"54","severity":1,"message":"55","line":294,"column":17,"nodeType":"56","endLine":294,"endColumn":81},{"ruleId":"57","severity":1,"message":"58","line":3,"column":10,"nodeType":"59","messageId":"60","endLine":3,"endColumn":16},{"ruleId":"57","severity":1,"message":"61","line":11,"column":9,"nodeType":"59","messageId":"60","endLine":11,"endColumn":13},{"ruleId":"62","severity":1,"message":"63","line":101,"column":32,"nodeType":"64","messageId":"65","endLine":101,"endColumn":33,"suggestions":"66"},{"ruleId":"62","severity":1,"message":"67","line":101,"column":54,"nodeType":"64","messageId":"65","endLine":101,"endColumn":55,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":117,"column":24,"nodeType":"71","messageId":"72","endLine":117,"endColumn":26},{"ruleId":"73","severity":1,"message":"74","line":151,"column":18,"nodeType":"59","messageId":"75","endLine":151,"endColumn":22},{"ruleId":"76","severity":1,"message":"77","line":238,"column":11,"nodeType":"56","endLine":245,"endColumn":13},{"ruleId":"54","severity":1,"message":"55","line":376,"column":21,"nodeType":"56","endLine":387,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":457,"column":29,"nodeType":"80","messageId":"72","endLine":457,"endColumn":34},{"ruleId":"69","severity":1,"message":"70","line":458,"column":56,"nodeType":"71","messageId":"72","endLine":458,"endColumn":58},{"ruleId":"69","severity":1,"message":"70","line":472,"column":42,"nodeType":"71","messageId":"72","endLine":472,"endColumn":44},{"ruleId":"69","severity":1,"message":"70","line":494,"column":53,"nodeType":"71","messageId":"72","endLine":494,"endColumn":55},{"ruleId":"69","severity":1,"message":"70","line":538,"column":38,"nodeType":"71","messageId":"72","endLine":538,"endColumn":40},{"ruleId":"69","severity":1,"message":"70","line":544,"column":52,"nodeType":"71","messageId":"72","endLine":544,"endColumn":54},{"ruleId":"78","severity":1,"message":"79","line":555,"column":29,"nodeType":"80","messageId":"72","endLine":555,"endColumn":34},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'initViz', 'initVizAgeYear', 'initVizFLuYear', 'initVizIndigenous', 'initVizSexYear', 'initVizStateYear', and 'initVizTimeSeries'. Either include them or remove the dependency array.","ArrayExpression",["81"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'Meta' is assigned a value but never used.","no-useless-escape","Unnecessary escape character: \\!.","Literal","unnecessaryEscape",["82","83"],"Unnecessary escape character: \\).",["84","85"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-redeclare","'text' is already defined.","redeclared","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-dupe-keys","Duplicate key 'color'.","ObjectExpression",{"desc":"86","fix":"87"},{"messageId":"88","fix":"89","desc":"90"},{"messageId":"91","fix":"92","desc":"93"},{"messageId":"88","fix":"94","desc":"90"},{"messageId":"91","fix":"95","desc":"93"},"Update the dependencies array to be: [initViz, initVizAgeYear, initVizFLuYear, initVizIndigenous, initVizSexYear, initVizStateYear, initVizTimeSeries]",{"range":"96","text":"97"},"removeEscape",{"range":"98","text":"99"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"100","text":"101"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"102","text":"99"},{"range":"103","text":"101"},[2066,2068],"[initViz, initVizAgeYear, initVizFLuYear, initVizIndigenous, initVizSexYear, initVizStateYear, initVizTimeSeries]",[2991,2992],"",[2991,2991],"\\",[3013,3014],[3013,3013]]